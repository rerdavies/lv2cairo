// Copyright (c) 2023 Robin E. R. Davies
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#include "keysym_names.hpp"
#include <sstream>
#include <iomanip>
#include <map>

#define XK_MISCELLANY
#define XK_LATIN1

#include <X11/keysymdef.h>

using namespace std;

using namespace lvtk;

static std::map<uint32_t, std::string> kkMap;

#define KK(keycode) \
    kkMap[keycode] = #keycode;

std::string lvtk::GetKeysymName(uint32_t keySym)
{
    if (kkMap.size() == 0)
    {
        KK(XK_Home)
        KK(XK_Left)
        KK(XK_Up)
        KK(XK_Right)
        KK(XK_Down)
        KK(XK_Prior)
        KK(XK_Page_Up)
        KK(XK_Next)
        KK(XK_Page_Down)
        KK(XK_End)
        KK(XK_Begin)
        KK(XK_BackSpace)
        KK(XK_Tab)
        KK(XK_Linefeed)
        KK(XK_Clear)
        KK(XK_Return)
        KK(XK_Pause)
        KK(XK_Scroll_Lock)
        KK(XK_Sys_Req)
        KK(XK_Escape)
        KK(XK_Delete)

        KK(XK_KP_Space)
        KK(XK_KP_Tab)
        KK(XK_KP_Enter)
        KK(XK_KP_F1)
        KK(XK_KP_F2)
        KK(XK_KP_F3)
        KK(XK_KP_F4)
        KK(XK_KP_Home)
        KK(XK_KP_Left)
        KK(XK_KP_Up)
        KK(XK_KP_Right)
        KK(XK_KP_Down)
        KK(XK_KP_Prior)
        KK(XK_KP_Page_Up)
        KK(XK_KP_Next)
        KK(XK_KP_Page_Down)
        KK(XK_KP_End)
        KK(XK_KP_Begin)
        KK(XK_KP_Insert)
        KK(XK_KP_Delete)
        KK(XK_KP_Equal)
        KK(XK_KP_Multiply)
        KK(XK_KP_Add)
        KK(XK_KP_Separator)
        KK(XK_KP_Subtract)
        KK(XK_KP_Decimal)
        KK(XK_KP_Divide)

        KK(XK_F1)
        KK(XK_F2)
        KK(XK_F3)
        KK(XK_F4)
        KK(XK_F5)
        KK(XK_F6)
        KK(XK_F7)
        KK(XK_F8)
        KK(XK_F9)
        KK(XK_F10)
        KK(XK_F11)
        KK(XK_L1)
        KK(XK_F12)
        KK(XK_L2)
        KK(XK_F13)
        KK(XK_L3)
        KK(XK_F14)
        KK(XK_L4)
        KK(XK_F15)
        KK(XK_L5)
        KK(XK_F16)
        KK(XK_L6)
        KK(XK_F17)
        KK(XK_L7)
        KK(XK_F18)
        KK(XK_L8)
        KK(XK_F19)
        KK(XK_L9)
        KK(XK_F20)
        KK(XK_L10)
        KK(XK_F21)
        KK(XK_R1)
        KK(XK_F22)
        KK(XK_R2)
        KK(XK_F23)
        KK(XK_R3)
        KK(XK_F24)
        KK(XK_R4)
        KK(XK_F25)
        KK(XK_R5)
        KK(XK_F26)
        KK(XK_R6)
        KK(XK_F27)
        KK(XK_R7)
        KK(XK_F28)
        KK(XK_R8)
        KK(XK_F29)
        KK(XK_R9)
        KK(XK_F30)
        KK(XK_R10)
        KK(XK_F31)
        KK(XK_R11)
        KK(XK_F32)
        KK(XK_R12)
        KK(XK_F33)
        KK(XK_R13)
        KK(XK_F34)
        KK(XK_R14)
        KK(XK_F35)
        KK(XK_R15)
        KK(XK_Shift_L)
        KK(XK_Shift_R)
        KK(XK_Control_L)
        KK(XK_Control_R)
        KK(XK_Caps_Lock)
        KK(XK_Shift_Lock)

        KK(XK_Meta_L)
        KK(XK_Meta_R)
        KK(XK_Alt_L)
        KK(XK_Alt_R)
        KK(XK_Super_L)
        KK(XK_Super_R)
        KK(XK_Hyper_L)
        KK(XK_Hyper_R)

        KK(XK_space)
        KK(XK_exclam)
        KK(XK_quotedbl)
        KK(XK_numbersign)
        KK(XK_dollar)
        KK(XK_percent)
        KK(XK_ampersand)
        KK(XK_apostrophe)
        KK(XK_quoteright)
        KK(XK_parenleft)
        KK(XK_parenright)
        KK(XK_asterisk)
        KK(XK_plus)
        KK(XK_comma)
        KK(XK_minus)
        KK(XK_period)
        KK(XK_slash)
        KK(XK_0)
        KK(XK_1)
        KK(XK_2)
        KK(XK_3)
        KK(XK_4)
        KK(XK_5)
        KK(XK_6)
        KK(XK_7)
        KK(XK_8)
        KK(XK_9)
        KK(XK_colon)
        KK(XK_semicolon)
        KK(XK_less)
        KK(XK_equal)
        KK(XK_greater)
        KK(XK_question)
        KK(XK_at)
        KK(XK_A)
        KK(XK_B)
        KK(XK_C)
        KK(XK_D)
        KK(XK_E)
        KK(XK_F)
        KK(XK_G)
        KK(XK_H)
        KK(XK_I)
        KK(XK_J)
        KK(XK_K)
        KK(XK_L)
        KK(XK_M)
        KK(XK_N)
        KK(XK_O)
        KK(XK_P)
        KK(XK_Q)
        KK(XK_R)
        KK(XK_S)
        KK(XK_T)
        KK(XK_U)
        KK(XK_V)
        KK(XK_W)
        KK(XK_X)
        KK(XK_Y)
        KK(XK_Z)
        KK(XK_bracketleft)
        KK(XK_backslash)
        KK(XK_bracketright)
        KK(XK_asciicircum)
        KK(XK_underscore)
        KK(XK_grave)
        KK(XK_quoteleft)
        KK(XK_a)
        KK(XK_b)
        KK(XK_c)
        KK(XK_d)
        KK(XK_e)
        KK(XK_f)
        KK(XK_g)
        KK(XK_h)
        KK(XK_i)
        KK(XK_j)
        KK(XK_k)
        KK(XK_l)
        KK(XK_m)
        KK(XK_n)
        KK(XK_o)
        KK(XK_p)
        KK(XK_q)
        KK(XK_r)
        KK(XK_s)
        KK(XK_t)
        KK(XK_u)
        KK(XK_v)
        KK(XK_w)
        KK(XK_x)
        KK(XK_y)
        KK(XK_z)
        KK(XK_braceleft)
        KK(XK_bar)
        KK(XK_braceright)
        KK(XK_asciitilde)

        KK(XK_nobreakspace)
        KK(XK_exclamdown)
        KK(XK_cent)
        KK(XK_sterling)
        KK(XK_currency)
        KK(XK_yen)
        KK(XK_brokenbar)
        KK(XK_section)
        KK(XK_diaeresis)
        KK(XK_copyright)
        KK(XK_ordfeminine)
        KK(XK_guillemotleft)
        KK(XK_notsign)
        KK(XK_hyphen)
        KK(XK_registered)
        KK(XK_macron)
        KK(XK_degree)
        KK(XK_plusminus)
        KK(XK_twosuperior)
        KK(XK_threesuperior)
        KK(XK_acute)
        KK(XK_mu)
        KK(XK_paragraph)
        KK(XK_periodcentered)
        KK(XK_cedilla)
        KK(XK_onesuperior)
        KK(XK_masculine)
        KK(XK_guillemotright)
        KK(XK_onequarter)
        KK(XK_onehalf)
        KK(XK_threequarters)
        KK(XK_questiondown)
        KK(XK_Agrave)
        KK(XK_Aacute)
        KK(XK_Acircumflex)
        KK(XK_Atilde)
        KK(XK_Adiaeresis)
        KK(XK_Aring)
        KK(XK_AE)
        KK(XK_Ccedilla)
        KK(XK_Egrave)
        KK(XK_Eacute)
        KK(XK_Ecircumflex)
        KK(XK_Ediaeresis)
        KK(XK_Igrave)
        KK(XK_Iacute)
        KK(XK_Icircumflex)
        KK(XK_Idiaeresis)
        KK(XK_ETH)
        KK(XK_Eth)
        KK(XK_Ntilde)
        KK(XK_Ograve)
        KK(XK_Oacute)
        KK(XK_Ocircumflex)
        KK(XK_Otilde)
        KK(XK_Odiaeresis)
        KK(XK_multiply)
        KK(XK_Oslash)
        KK(XK_Ooblique)
        KK(XK_Ugrave)
        KK(XK_Uacute)
        KK(XK_Ucircumflex)
        KK(XK_Udiaeresis)
        KK(XK_Yacute)
        KK(XK_THORN)
        KK(XK_Thorn)
        KK(XK_ssharp)
        KK(XK_agrave)
        KK(XK_aacute)
        KK(XK_acircumflex)
        KK(XK_atilde)
        KK(XK_adiaeresis)
        KK(XK_aring)
        KK(XK_ae)
        KK(XK_ccedilla)
        KK(XK_egrave)
        KK(XK_eacute)
        KK(XK_ecircumflex)
        KK(XK_ediaeresis)
        KK(XK_igrave)
        KK(XK_iacute)
        KK(XK_icircumflex)
        KK(XK_idiaeresis)
        KK(XK_eth)
        KK(XK_ntilde)
        KK(XK_ograve)
        KK(XK_oacute)
        KK(XK_ocircumflex)
        KK(XK_otilde)
        KK(XK_odiaeresis)
        KK(XK_division)
        KK(XK_oslash)
        KK(XK_ooblique)
        KK(XK_ugrave)
        KK(XK_uacute)
        KK(XK_ucircumflex)
        KK(XK_udiaeresis)
        KK(XK_yacute)
        KK(XK_thorn)
        KK(XK_ydiaeresis)
    }

    std::stringstream s;

    auto f = kkMap.find(keySym);
    if (f != kkMap.end())
    {
        s << f->second << " (" << setbase(16) << keySym << ")";
    }
    else
    {
        s << "keycode " << setbase(16) << keySym;
    }
    return s.str();
}
